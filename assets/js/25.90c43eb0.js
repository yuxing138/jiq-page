(window.webpackJsonp=window.webpackJsonp||[]).push([[25],{305:function(t,r,n){"use strict";n.r(r);var a=n(14),o=Object(a.a)({},(function(){var t=this,r=t._self._c;return r("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[r("h5",{attrs:{id:"spring其实没什么好问的"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#spring其实没什么好问的"}},[t._v("#")]),t._v(" Spring其实没什么好问的")]),t._v(" "),r("p",[t._v("1、因为Spring只是一个Bean工厂，没了。")]),t._v(" "),r("p",[t._v("2、还能问点什么？也就只有循环依赖了，其实就是问依赖注入，没了。")]),t._v(" "),r("p",[t._v("3、还能问点什么？也就只有AOP了，AOP其实就是动态代理，没了。")]),t._v(" "),r("h5",{attrs:{id:"spring自动注入"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#spring自动注入"}},[t._v("#")]),t._v(" Spring自动注入")]),t._v(" "),r("p",[t._v("1、自动注入（又称自动装配）是依赖注入的一种形式。")]),t._v(" "),r("p",[t._v("2、Spring自动注入相关源码：")]),t._v(" "),r("p",[t._v("org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor#buildAutowiringMetadata")]),t._v(" "),r("p",[t._v("org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor#postProcessProperties")]),t._v(" "),r("p",[t._v("org.springframework.beans.factory.annotation.InjectionMetadata.InjectedElement#inject")]),t._v(" "),r("p",[t._v("3、可知，自动注入的逻辑为：先通过反射收集@Autowired注解，再通过反射赋值。")]),t._v(" "),r("h5",{attrs:{id:"spring之ioc"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#spring之ioc"}},[t._v("#")]),t._v(" Spring之IOC")]),t._v(" "),r("p",[t._v("1、控制反转"),r("code",[t._v("inversion of control")]),t._v("，是一种编程思想（又称设计模式）。")]),t._v(" "),r("p",[t._v("2、实际上很多设计模式都用到了控制转移的思想。但在Java面试界，Spring的IOC特指依赖注入。")])])}),[],!1,null,null,null);r.default=o.exports}}]);